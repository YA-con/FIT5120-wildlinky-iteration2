{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport debounce from 'lodash.debounce';\nexport const useSpeciesData = query => {\n  _s();\n  const [info, setInfo] = useState([]);\n  const [points, setPoints] = useState([]);\n  const [charts, setCharts] = useState([]);\n  const [loadingInfo, setLoadingInfo] = useState(false);\n  const [loadingCharts, setLoadingCharts] = useState(false);\n  const [error, setError] = useState(null);\n  const isInitialMount = useRef(true);\n  const fetchSpeciesInfo = async q => {\n    setLoadingInfo(true);\n    setError(null);\n    if (q.species_id === 0) {\n      console.log(\"Fetching all species info...\");\n      try {\n        const speciesArr = [1, 2, 3, 4];\n        const responses = await Promise.all(speciesArr.map(id => {\n          const url = `https://fit5120-t28-wildlinky.onrender.com/api/species-filtered-locations?postcode=${encodeURIComponent(q.postcode)}&species_id=${id}`;\n          return fetch(url).then(res => res.json());\n        }));\n        let aggregatedPoints = [];\n        let allSpeciesInfo = [];\n        responses.forEach(resp => {\n          if (resp.result) {\n            aggregatedPoints = aggregatedPoints.concat(resp.result);\n          }\n          if (resp.species_info) {\n            allSpeciesInfo.push(resp.species_info);\n          }\n        });\n        setPoints(aggregatedPoints);\n        setInfo(allSpeciesInfo);\n      } catch (err) {\n        setError(\"Failed to fetch all species info\");\n        console.error(err);\n      } finally {\n        setLoadingInfo(false);\n      }\n      return;\n    } else {\n      const str = `?postcode=${encodeURIComponent(q.postcode)}&species_id=${q.species_id}`;\n      try {\n        const res = await fetch(`https://fit5120-t28-wildlinky.onrender.com/api/species-filtered-locations${str}`);\n        const data = await res.json();\n        setInfo(data.species_info ? [data.species_info] : []);\n        setPoints(data.result || []);\n      } catch (err) {\n        setError(\"Failed to fetch species info\");\n        console.error(err);\n      } finally {\n        setLoadingInfo(false);\n      }\n    }\n  };\n  const fetchChartData = async species_id => {\n    setLoadingCharts(true);\n    setError(null);\n    try {\n      const res = await fetch(`https://fit5120-t28-wildlinky.onrender.com/api/species-locations/timeseries?species_id=${species_id}`);\n      const data = await res.json();\n      setCharts(data);\n    } catch (err) {\n      setError(\"Failed to fetch chart data\");\n      console.error(err);\n    } finally {\n      setLoadingCharts(false);\n    }\n  };\n  useEffect(() => {\n    const {\n      postcode,\n      species_id\n    } = query;\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      if (!postcode.trim()) return;\n    }\n    const debouncedHandler = debounce(() => {\n      fetchSpeciesInfo({\n        postcode,\n        species_id\n      });\n    }, 300);\n    debouncedHandler();\n    return () => {\n      debouncedHandler.cancel();\n    };\n  }, [query.postcode, query.species_id]);\n  useEffect(() => {\n    fetchChartData(query.species_id);\n  }, [query.species_id, query.postcode]);\n  return {\n    info,\n    points,\n    charts,\n    loadingInfo,\n    loadingCharts,\n    error\n  };\n};\n_s(useSpeciesData, \"VvnzuvsxKrNJeI9nDo1DGzcFSAc=\");","map":{"version":3,"names":["useState","useEffect","useRef","debounce","useSpeciesData","query","_s","info","setInfo","points","setPoints","charts","setCharts","loadingInfo","setLoadingInfo","loadingCharts","setLoadingCharts","error","setError","isInitialMount","fetchSpeciesInfo","q","species_id","console","log","speciesArr","responses","Promise","all","map","id","url","encodeURIComponent","postcode","fetch","then","res","json","aggregatedPoints","allSpeciesInfo","forEach","resp","result","concat","species_info","push","err","str","data","fetchChartData","current","trim","debouncedHandler","cancel"],"sources":["/Users/lioz/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/03b737568ad6e2cb5183b41f2df2a83c/Message/MessageTemp/07602ef1725db587cc704e534ab2060a/File/FIT5120-wildlinky-iteration2(1)/src/hook/useSpeciesData.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport debounce from 'lodash.debounce';\n\nexport const useSpeciesData = (query) => {\n  const [info, setInfo] = useState([]); \n  const [points, setPoints] = useState([]);\n  const [charts, setCharts] = useState([]);\n  const [loadingInfo, setLoadingInfo] = useState(false);\n  const [loadingCharts, setLoadingCharts] = useState(false);\n  const [error, setError] = useState(null);\n\n  const isInitialMount = useRef(true);\n  const fetchSpeciesInfo = async (q) => {\n    setLoadingInfo(true);\n    setError(null);\n\n    if (q.species_id === 0) {\n      console.log(\"Fetching all species info...\");\n      try {\n        const speciesArr = [1, 2, 3, 4];\n        const responses = await Promise.all(\n          speciesArr.map((id) => {\n            const url = `https://fit5120-t28-wildlinky.onrender.com/api/species-filtered-locations?postcode=${encodeURIComponent(q.postcode)}&species_id=${id}`;\n            return fetch(url).then((res) => res.json());\n          })\n        );\n\n        let aggregatedPoints = [];\n        let allSpeciesInfo = [];\n\n        responses.forEach((resp) => {\n          if (resp.result) {\n            aggregatedPoints = aggregatedPoints.concat(resp.result);\n          }\n          if (resp.species_info) {\n            allSpeciesInfo.push(resp.species_info);\n          }\n        });\n\n        setPoints(aggregatedPoints);\n        setInfo(allSpeciesInfo);\n      } catch (err) {\n        setError(\"Failed to fetch all species info\");\n        console.error(err);\n      } finally {\n        setLoadingInfo(false);\n      }\n      return;\n    } else {\n      const str = `?postcode=${encodeURIComponent(q.postcode)}&species_id=${q.species_id}`;\n      try {\n        const res = await fetch(`https://fit5120-t28-wildlinky.onrender.com/api/species-filtered-locations${str}`);\n        const data = await res.json();\n        setInfo(data.species_info ? [data.species_info] : []);\n        setPoints(data.result || []);\n      } catch (err) {\n        setError(\"Failed to fetch species info\");\n        console.error(err);\n      } finally {\n        setLoadingInfo(false);\n      }\n    }\n  };\n\n  const fetchChartData = async (species_id) => {\n    setLoadingCharts(true);\n    setError(null);\n    try {\n      const res = await fetch(`https://fit5120-t28-wildlinky.onrender.com/api/species-locations/timeseries?species_id=${species_id}`);\n      const data = await res.json();\n      setCharts(data);\n    } catch (err) {\n      setError(\"Failed to fetch chart data\");\n      console.error(err);\n    } finally {\n      setLoadingCharts(false);\n    }\n  };\n\n  useEffect(() => {\n    const { postcode, species_id } = query;\n\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      if (!postcode.trim()) return;\n    }\n\n    const debouncedHandler = debounce(() => {\n      fetchSpeciesInfo({ postcode, species_id });\n    }, 300);\n\n    debouncedHandler();\n\n    return () => {\n      debouncedHandler.cancel();\n    };\n  }, [query.postcode, query.species_id]);\n\n  useEffect(() => {\n    fetchChartData(query.species_id);\n  }, [query.species_id, query.postcode]);\n\n  return { info, points, charts, loadingInfo, loadingCharts, error };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,OAAO,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMmB,cAAc,GAAGjB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMkB,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCP,cAAc,CAAC,IAAI,CAAC;IACpBI,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAIG,CAAC,CAACC,UAAU,KAAK,CAAC,EAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C,IAAI;QACF,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCH,UAAU,CAACI,GAAG,CAAEC,EAAE,IAAK;UACrB,MAAMC,GAAG,GAAG,sFAAsFC,kBAAkB,CAACX,CAAC,CAACY,QAAQ,CAAC,eAAeH,EAAE,EAAE;UACnJ,OAAOI,KAAK,CAACH,GAAG,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;QAC7C,CAAC,CACH,CAAC;QAED,IAAIC,gBAAgB,GAAG,EAAE;QACzB,IAAIC,cAAc,GAAG,EAAE;QAEvBb,SAAS,CAACc,OAAO,CAAEC,IAAI,IAAK;UAC1B,IAAIA,IAAI,CAACC,MAAM,EAAE;YACfJ,gBAAgB,GAAGA,gBAAgB,CAACK,MAAM,CAACF,IAAI,CAACC,MAAM,CAAC;UACzD;UACA,IAAID,IAAI,CAACG,YAAY,EAAE;YACrBL,cAAc,CAACM,IAAI,CAACJ,IAAI,CAACG,YAAY,CAAC;UACxC;QACF,CAAC,CAAC;QAEFlC,SAAS,CAAC4B,gBAAgB,CAAC;QAC3B9B,OAAO,CAAC+B,cAAc,CAAC;MACzB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZ5B,QAAQ,CAAC,kCAAkC,CAAC;QAC5CK,OAAO,CAACN,KAAK,CAAC6B,GAAG,CAAC;MACpB,CAAC,SAAS;QACRhC,cAAc,CAAC,KAAK,CAAC;MACvB;MACA;IACF,CAAC,MAAM;MACL,MAAMiC,GAAG,GAAG,aAAaf,kBAAkB,CAACX,CAAC,CAACY,QAAQ,CAAC,eAAeZ,CAAC,CAACC,UAAU,EAAE;MACpF,IAAI;QACF,MAAMc,GAAG,GAAG,MAAMF,KAAK,CAAC,4EAA4Ea,GAAG,EAAE,CAAC;QAC1G,MAAMC,IAAI,GAAG,MAAMZ,GAAG,CAACC,IAAI,CAAC,CAAC;QAC7B7B,OAAO,CAACwC,IAAI,CAACJ,YAAY,GAAG,CAACI,IAAI,CAACJ,YAAY,CAAC,GAAG,EAAE,CAAC;QACrDlC,SAAS,CAACsC,IAAI,CAACN,MAAM,IAAI,EAAE,CAAC;MAC9B,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZ5B,QAAQ,CAAC,8BAA8B,CAAC;QACxCK,OAAO,CAACN,KAAK,CAAC6B,GAAG,CAAC;MACpB,CAAC,SAAS;QACRhC,cAAc,CAAC,KAAK,CAAC;MACvB;IACF;EACF,CAAC;EAED,MAAMmC,cAAc,GAAG,MAAO3B,UAAU,IAAK;IAC3CN,gBAAgB,CAAC,IAAI,CAAC;IACtBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMkB,GAAG,GAAG,MAAMF,KAAK,CAAC,0FAA0FZ,UAAU,EAAE,CAAC;MAC/H,MAAM0B,IAAI,GAAG,MAAMZ,GAAG,CAACC,IAAI,CAAC,CAAC;MAC7BzB,SAAS,CAACoC,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOF,GAAG,EAAE;MACZ5B,QAAQ,CAAC,4BAA4B,CAAC;MACtCK,OAAO,CAACN,KAAK,CAAC6B,GAAG,CAAC;IACpB,CAAC,SAAS;MACR9B,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,MAAM;MAAEgC,QAAQ;MAAEX;IAAW,CAAC,GAAGjB,KAAK;IAEtC,IAAIc,cAAc,CAAC+B,OAAO,EAAE;MAC1B/B,cAAc,CAAC+B,OAAO,GAAG,KAAK;MAC9B,IAAI,CAACjB,QAAQ,CAACkB,IAAI,CAAC,CAAC,EAAE;IACxB;IAEA,MAAMC,gBAAgB,GAAGjD,QAAQ,CAAC,MAAM;MACtCiB,gBAAgB,CAAC;QAAEa,QAAQ;QAAEX;MAAW,CAAC,CAAC;IAC5C,CAAC,EAAE,GAAG,CAAC;IAEP8B,gBAAgB,CAAC,CAAC;IAElB,OAAO,MAAM;MACXA,gBAAgB,CAACC,MAAM,CAAC,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAAChD,KAAK,CAAC4B,QAAQ,EAAE5B,KAAK,CAACiB,UAAU,CAAC,CAAC;EAEtCrB,SAAS,CAAC,MAAM;IACdgD,cAAc,CAAC5C,KAAK,CAACiB,UAAU,CAAC;EAClC,CAAC,EAAE,CAACjB,KAAK,CAACiB,UAAU,EAAEjB,KAAK,CAAC4B,QAAQ,CAAC,CAAC;EAEtC,OAAO;IAAE1B,IAAI;IAAEE,MAAM;IAAEE,MAAM;IAAEE,WAAW;IAAEE,aAAa;IAAEE;EAAM,CAAC;AACpE,CAAC;AAACX,EAAA,CApGWF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}